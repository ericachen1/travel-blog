{"version":3,"sources":["components/Header.js","components/Footer.js","components/Post.js","components/Feed.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","Post","props","name","src","image","alt","text","Feed","useState","posts","setPosts","location","setLocation","imgURL","setImgURL","setText","onChange","event","target","value","onClick","newPost","console","log","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAYeA,EATA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,6CACA,8DCGGC,G,MAPA,WACX,OACI,qBAAKD,UAAU,SAAf,SACI,2F,cCMGE,EAVF,SAACC,GACV,OACI,sBAAKH,UAAU,OAAf,UACI,mCAAMG,EAAMC,KAAZ,OACA,qBAAKC,IAAKF,EAAMG,MAAOC,IAAI,kBAC3B,kCAAKJ,EAAMK,KAAX,WCoDGC,G,MAvDF,WACT,IAYA,EAA0BC,mBAZb,CAAC,CACVN,KAAM,SACNE,MAAO,oKACPE,KAAM,UAEV,CACAJ,KAAM,eACNE,MAAO,2MACPE,KAAM,YAIN,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,IAAjC,mBAAOF,EAAP,KAAaS,EAAb,KAmBA,OACI,sBAAKjB,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,8CACA,6CACA,uBAAOkB,SAtBW,SAACC,GAC3BL,EAAYK,EAAMC,OAAOC,UAsBjB,8CACA,uBAAOH,SArBM,SAACC,GACtBH,EAAUG,EAAMC,OAAOC,UAqBf,yCACA,uBAAOH,SApBO,SAACC,GACvBF,EAAQE,EAAMC,OAAOC,aAqBjB,wBAAQC,QAlBC,WACb,IAAMC,EAAU,CAACnB,KAAKS,EAAUP,MAAMS,EAAQP,KAAKA,GACnDgB,QAAQC,IAAIF,GACZX,EAAS,CAACW,GAAF,mBAAcZ,KACtBa,QAAQC,IAAId,IAcR,sBAECA,EAAMe,KAAI,SAACb,GAAD,OACP,cAAC,EAAD,CAAMT,KAAMS,EAAST,KAAME,MAAOO,EAASP,MAAOE,KAAMK,EAASL,eCtClEmB,MAVf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82414634.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h1>Travel Blog</h1>\n            <p>Explore the world with us</p>\n        </div>\n    )\n}\n\nexport default Header // important if we want to use header.js in other files\n","import React from 'react'\nimport './Footer.css'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <p>Build with love during the Software Engineering Summit</p>\n        </div>\n    )\n}\nexport default Footer\n","import React from 'react'\n\nconst Post = (props) => {\n    return (\n        <div className=\"post\">\n            <h2> {props.name} </h2>\n            <img src={props.image} alt=\"blog location\"></img>\n            <p> {props.text} </p>\n        </div> \n    )\n}\n\nexport default Post\n","import React, {useState} from 'react'\nimport Post from './Post'\nimport './Feed.css'\n\nconst Feed = () => {\n    const data = [{\n        name: \"tester\",\n        image: \"https://media.istockphoto.com/photos/grand-prismatic-spring-picture-id899846654?b=1&k=20&m=899846654&s=170667a&w=0&h=ON3z2xYiGOzuVEqfqb8yt9roHdWfCTnip8O5ck3yPTI=\",\n        text: \"tester\",\n    },\n    {\n    name: \"Yellow Stone\",\n    image: \"https://media.istockphoto.com/photos/yellowstone-falls-river-grand-canyon-national-park-montana-mt-picture-id154931596?b=1&k=20&m=154931596&s=170667a&w=0&h=MI90LXLguHIkCqijs40tRngRwtr2QjzhrV7YG_BVRhw=\",\n    text: \"Splash\",\n    },\n    ]; // use []; when more than one entry in the array\n    \n    const [posts, setPosts] = useState(data); // data rep by useState variable \n    const [location, setLocation] = useState('');\n    const [imgURL, setImgURL] = useState('');\n    const [text, setText] = useState('');\n\n    const locationChangeHandler = (event) => {\n        setLocation(event.target.value)\n    }\n    const URLChangeHandler = (event) => {\n        setImgURL(event.target.value)\n    }\n    const textChangeHandler = (event) => {\n        setText(event.target.value)\n    }\n\n    const addPosts = () => {\n        const newPost = {name:location, image:imgURL, text:text}\n        console.log(newPost);\n        setPosts([newPost, ...posts]) // new posts and everything else in the post\n        console.log(posts)\n    }\n\n    return (\n        <div className=\"feed\">\n            <div className=\"newPost\">\n                <h2>Add new post</h2>\n                <label>Location</label>\n                <input onChange={locationChangeHandler}></input>\n                <label>Image URL</label>\n                <input onChange={URLChangeHandler}></input>\n                <label>Text</label>\n                <input onChange={textChangeHandler}></input>\n            </div>\n            <button onClick={addPosts}>Add post</button>\n\n            {posts.map((location) => (\n                <Post name={location.name} image={location.image} text={location.text}/>\n            ))}\n        </div>\n    )\n}\n\nexport default Feed\n","import './App.css';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Feed from './components/Feed'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Feed />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}